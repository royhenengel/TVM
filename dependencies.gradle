ext {

    libs = [
            gradle        : "com.android.tools.build:gradle:$buildGradle",
            kotlinGradle  : "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin",
            kotlinStdLib  : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin",
            kotlinSafeArgs: "androidx.navigation:navigation-safe-args-gradle-plugin:$ktxNavigation",
            glide         : "com.github.bumptech.glide:glide:$glide",
            timber        : "com.jakewharton.timber:timber:$timber"
    ]

    androidX = [
            appCompat              : "androidx.appcompat:appcompat:$appCompat",
            supportLibrary          : "androidx.legacy:legacy-support-v4:$supportLibrary",
            constraintLayout       : "androidx.constraintlayout:constraintlayout:$contraintLayout",
            recyclerview           : "androidx.recyclerview:recyclerview:$recyclerview",
            cardview               : "com.android.support:cardview-v7:$supportLibrary",
            material               : "com.google.android.material:material:$material",
            design                 : "com.android.support:design:$design",

            // Arch
            paging                 : "android.arch.paging:runtime:$paging",
            archLifecycleExtentions: "android.arch.lifecycle:extensions:$arch",
            lifecycleExtensions   : "androidx.lifecycle:lifecycle-extensions:$lifecycleExtensions"
    ]

    ktx = [
            core              : "androidx.core:core-ktx:$ktxCore",
            coroutines        : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$ktxCoroutines",
            lifecycleViewmodel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$ktxLifecycleViewModel",
            navigationFragment: "androidx.navigation:navigation-fragment-ktx:$ktxNavigation",
            navigationUi      : "androidx.navigation:navigation-ui-ktx:$ktxNavigation"
    ]

    networkDependencies = [
            // Retrofit
            retrofit                 : "com.squareup.retrofit2:retrofit:$retrofit",

            // Adapters
            retrofitGsonConverter    : "com.squareup.retrofit2:converter-gson:$retrofit",
            kotlinCoroutinesAdapter: "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$retrofitCoroutinesAdapter",

            // OkHttp
            okHttp3                  : "com.squareup.okhttp3:okhttp:$okhttp",
            okHttp3Logging           : "com.squareup.okhttp3:logging-interceptor:$loggingInterceptor"
    ]

    di = [:]
    di.implementations = [
            dagger         : "com.google.dagger:dagger:$dagger",
            daggerAndroid : "com.google.dagger:dagger-android:$dagger",
            androidSupport: "com.google.dagger:dagger-android-support:$dagger"
    ]
    di.annotationProcessors = [
            daggerCompiler         : "com.google.dagger:dagger-compiler:$dagger",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$dagger"
    ]

    rxJava = [
            rxjava       : "io.reactivex.rxjava2:rxjava:$rxJava",
            rxAndroid    : "io.reactivex.rxjava2:rxandroid:$rxAndroid",
            rxJavaAdapter: "com.squareup.retrofit2:adapter-rxjava2:$rxAdapter"
    ]

    testImplementations = [
            junit          : "junit:junit:$junit",
            archCoreTesting: "android.arch.core:core-testing:$archCoreTesting",
            mockK          : "io.mockk:mockk:$mockk"
    ]

    androidTestImplementations = [
            testRunner     : "androidx.test:runner:$testRunner",
            espressoCore   : "androidx.test.espresso:espresso-core:$espressoCore",
            archCoreTesting: "android.arch.core:core-testing:$archCoreTesting"
    ]

}